@page "/eventlist"

@using System.Text.Json
@using Blazored.LocalStorage
@inject ILocalStorageService _localstorage;

@code {
    private List<Event> events;

    protected override async Task OnInitializedAsync()
    {
        var json = await _localstorage.GetItemAsStringAsync("events");
        if (string.IsNullOrEmpty(json?.ToString()))
        {
            events = new List<Event>
            {
                new Event { Id = 1, Name = "Event 1", Date = DateTime.Now.AddDays(1), Location = "Location 1" },
                new Event { Id = 2, Name = "Event 2", Date = DateTime.Now.AddDays(2), Location = "Location 2" },
                new Event { Id = 3, Name = "Event 3", Date = DateTime.Now.AddDays(3), Location = "Location 3" }
            };
            await _localstorage.SetItemAsync("events", JsonSerializer.Serialize(events));
        }
        else
        {
            events = JsonSerializer.Deserialize<List<Event>>(json) ?? new List<Event>();
        }
    }
}

<h3>Event List</h3>

@if (events == null || !events.Any())
{
    <p>No events available.</p>
}
else
{
    @foreach (var item in events)
        {
            <EventCard Event="@item" />
        }
}